on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x gradlew
      
    - name: Create keystore directory
      run: mkdir -p keystore
      
    - name: Create signing keystore
      run: |
        keytool -genkeypair -v -storetype PKCS12 -keystore keystore/itnogor-build-key.jks -alias "ItNogor Build" -keyalg RSA -keysize 2048 -validity 10000 -storepass android -keypass android -dname "CN=ItNogor Build, OU=Development, O=ItNogor, L=Dhaka, ST=Dhaka, C=BD"
      
    - name: Setup signing config
      run: |
        echo "" >> gradle.properties
        echo "# ItNogor Build Signing Config" >> gradle.properties
        echo "storeFile=../keystore/itnogor-build-key.jks" >> gradle.properties
        echo "storePassword=android" >> gradle.properties
        echo "keyAlias=ItNogor Build" >> gradle.properties
        echo "keyPassword=android" >> gradle.properties
      
    - name: Build Signed APK
      run: ./gradlew assembleRelease
      
    - name: Get commit info
      id: commit
      run: |
        echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
        echo "COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: nogor-pay-release-${{ steps.commit.outputs.SHORT_SHA }}
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Create Release (only on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: itnogor-${{ steps.commit.outputs.SHORT_SHA }}
        release_name: NogorPay ItNogor Build ${{ steps.commit.outputs.SHORT_SHA }}
        body: |
          ## ItNogor Build
          
          **Commit**: ${{ github.sha }}
          **Message**: ${{ steps.commit.outputs.COMMIT_MSG }}
          **Branch**: main
          **Build Time**: ${{ github.event.head_commit.timestamp }}
          
          ### Download
          - [Release APK](https://github.com/${{ github.repository }}/releases/download/itnogor-${{ steps.commit.outputs.SHORT_SHA }}/nogor-pay-itnogor-${{ steps.commit.outputs.SHORT_SHA }}.apk)
          
          ### Installation
          1. Download the APK
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Grant required permissions
          
          ⚠️ **Note**: This is an ItNogor development build for testing purposes.
        draft: false
        prerelease: true
        
    - name: Upload APK to Release (only on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: nogor-pay-itnogor-${{ steps.commit.outputs.SHORT_SHA }}.apk
        asset_content_type: application/vnd.android.package-archive